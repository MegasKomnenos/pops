add_to_court_interaction = {
	category = interaction_debug_main
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes
	is_shown = {
		can_do_normal_interaction = yes
		debug_only = yes
		NOT = {
			scope:recipient = scope:actor
		}
		scope:recipient = {
			NOT = {
				is_courtier_of = scope:actor
			}
		}
	}
	on_accept = {
		scope:actor = {
			add_courtier = scope:recipient
		}
	}
	auto_accept = yes
}
give_secrets_to_court_interaction = {
	category = interaction_debug_main
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes
	is_shown = {
		can_do_normal_interaction = yes
		debug_only = yes
	}
	on_accept = {
		scope:recipient = {
			random_list = {
				30 = {
					give_deviant_secret_or_trait_effect = yes
				}
				30 = {
					give_homosexual_secret_or_nothing_effect = yes
				}
			}
			hidden_effect = {
				every_courtier = {
					give_random_likely_secret_effect = yes
				}
			}
		}
	}
	auto_accept = yes
}
set_up_secrets_in_realm_interaction = {
	category = interaction_debug_main
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes
	is_shown = {
		can_do_normal_interaction = yes
		debug_only = yes
	}
	on_accept = {
		scope:recipient.top_liege = {
			hidden_effect = {
				add_to_list = secret_setup
				every_vassal_or_below = {
					add_to_list = secret_setup
					every_courtier_or_guest = {
						add_to_list = secret_setup
					}
				}
				every_neighboring_top_liege_realm_owner = {
					add_to_list = secret_setup
					every_vassal_or_below = {
						add_to_list = secret_setup
						every_courtier_or_guest = {
							add_to_list = secret_setup
						}
					}
				}
				every_in_list = {
					list = secret_setup
					random_list = {
						60 = {
							give_random_likely_secret_effect = yes
						}
						60 = {}
					}
				}
				random_in_list = {
					list = secret_setup
					limit = {
						top_liege = scope:recipient.top_liege
						any_secret = {
							NOT = {
								is_known_by = scope:recipient
							}
						}
					}
					random_secret = {
						limit = {
							NOT = {
								is_known_by = scope:recipient
							}
						}
						reveal_to = scope:recipient
					}
				}
				random_in_list = {
					list = secret_setup
					limit = {
						NOT = {
							top_liege = scope:recipient.top_liege
						}
						any_secret = {
							NOT = {
								is_known_by = scope:recipient
							}
						}
					}
					random_secret = {
						limit = {
							NOT = {
								is_known_by = scope:recipient
							}
						}
						reveal_to = scope:recipient
					}
				}
				every_in_list = {
					list = secret_setup
					save_scope_as = reveal_to_me
					random = {
						chance = 75
						random_in_list = {
							list = secret_setup
							limit = {
								any_secret = {
									NOT = {
										is_known_by = scope:reveal_to_me
									}
								}
							}
							random_secret = {
								limit = {
									NOT = {
										is_known_by = scope:reveal_to_me
									}
								}
								reveal_to = scope:reveal_to_me
							}
						}
					}
				}
				random_in_list = {
					list = secret_setup
					limit = {
						any_secret = {
							is_known_by = scope:recipient
						}
						NOT = {
							this = scope:recipient
						}
						is_foreign_court_guest = no
					}
					save_scope_as = prisoner_secret
					scope:recipient = {
						imprison = {
							target = scope:prisoner_secret
							type = dungeon
						}
					}
				}
				random_in_list = {
					list = secret_setup
					limit = {
						any_secret = {
							NOT = {
								is_known_by = scope:recipient
							}
						}
						NOT = {
							this = scope:recipient
						}
						is_foreign_court_guest = no
					}
					save_scope_as = prisoner_secret
					scope:recipient = {
						imprison = {
							target = scope:prisoner_secret
							type = dungeon
						}
					}
				}
			}
		}
	}
	auto_accept = yes
}
add_weak_hook_interaction = {
	category = interaction_debug_main
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes
	is_shown = {
		can_do_normal_interaction = yes
		debug_only = yes
		NOT = {
			scope:recipient = scope:actor
		}
	}
	auto_accept = yes
	on_accept = {
		scope:actor = {
			add_hook = {
				target = scope:recipient
				type = favor_hook
			}
		}
	}
}
add_strong_hook_interaction = {
	category = interaction_debug_main
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes
	is_shown = {
		can_do_normal_interaction = yes
		debug_only = yes
		NOT = {
			scope:recipient = scope:actor
		}
	}
	auto_accept = yes
	on_accept = {
		scope:actor = {
			add_hook = {
				target = scope:recipient
				type = strong_test_hook
			}
		}
	}
}
add_character_weight_interaction = {
	category = interaction_debug_main
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes
	is_shown = {
		can_do_normal_interaction = yes
		debug_only = yes
	}
	on_accept = {
		scope:recipient = {
			change_current_weight = 25
		}
	}
	auto_accept = yes
}
remove_character_weight_interaction = {
	category = interaction_debug_main
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes
	is_shown = {
		can_do_normal_interaction = yes
		debug_only = yes
	}
	on_accept = {
		scope:recipient = {
			change_current_weight = -25
		}
	}
	auto_accept = yes
}
slay_character_interaction = {
	category = interaction_debug_main
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes
	interface_priority = -1
	is_shown = {
		can_do_normal_interaction = yes
		debug_only = yes
	}
	on_accept = {
		random_independent_ruler = {
			save_scope_as = rando
		}
		scope:recipient = {
			death = {
				death_reason = death_duel
				killer = scope:rando
			}
		}
	}
	auto_accept = yes
}
give_bubonic_plague_interaction = {
	category = interaction_debug_main
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes
	interface_priority = -1
	is_shown = {
		can_do_normal_interaction = yes
		debug_only = yes
	}
	on_accept = {
		scope:recipient = {
			add_trait = bubonic_plague
		}
	}
	auto_accept = yes
}
