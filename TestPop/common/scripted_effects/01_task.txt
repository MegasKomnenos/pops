task_setup = {
	^^tasks_passive^
		set_variable = { name = task_&tasks_passive&_prog value = 0 }
		set_variable = { name = task_&tasks_passive&_prestige value = 0 }
		set_variable = { name = task_&tasks_passive&_lord value = 0 }
		^^skills^ set_variable = { name = task_&tasks_passive&_&skills& value = 0 } ^
	^
}

task_update = {
	every_in_list = {
		limit = {
			OR = {
				is_landed = no
				is_ruler = no
				primary_title.tier = tier_barony
			}
			
			is_councillor = no
		}
		variable = task_workers
		
		remove_variable = task_time_has
		remove_variable = task_time_spent
		remove_variable = task_prestige
	}
	
	clear_variable_list = task_workers
	
	^^tasks_passive^
		clear_variable_list = task_&tasks_passive& 
		array_clear = { name = task_&tasks_passive&_time }
		array_clear = { name = task_&tasks_passive&_prog }
		
		if = {
			limit = {
				has_variable = task_&tasks_passive&_lord
				
				var:task_&tasks_passive&_lord > 0
			}
			add_to_variable_list = { name = task_workers target = this }
			add_to_variable_list = { name = task_&tasks_passive& target = this }
			array_add = { name = task_&tasks_passive&_time value = var:task_&tasks_passive&_lord dec = 10 }
		}
		
		^^skills^
			if = {
				limit = {
					has_variable = task_&tasks_passive&_&skills&
					
					var:task_&tasks_passive&_&skills& > 0
				}
				ordered_&skills&_councillor = {
					position = 0
					
					prev = {
						add_to_variable_list = { name = task_workers target = prev }
						add_to_variable_list = { name = task_&tasks_passive& target = prev }
						array_add = { name = task_&tasks_passive&_time value = var:task_&tasks_passive&_&skills& dec = 10 }
					}
				}
			}
		^
	^
	
	set_variable = { name = task_time_has value = 10 }
	set_variable = { name = task_time_spent value = 0 }
	set_variable = { name = task_prestige value = 0 }
	
	every_in_list = {
		variable = task_workers
		
		set_variable = { name = task_time_has value = 10 }
		set_variable = { name = task_time_spent value = 0 }
		set_variable = { name = task_prestige value = 0 }
	}
	
	^^tasks_passive^
		set_variable = { name = task_update_t value = 0 }
		
		every_in_list = {
			variable = task_&tasks_passive&
			
			prev = {
				array_get = { name = task_&tasks_passive&_time value = var:task_update_t return = task_update_tt dec = 10 }
				
				prev = {
					set_variable = { name = task_update_ttt value = prev.var:task_update_tt }
					change_variable = { name = task_time_spent add = prev.var:task_update_tt }
				}
				
				task_get_prog_&tasks_passive& = { worker = prev time = var:task_update_tt return = task_update_tt }
				array_add = { name = task_&tasks_passive&_prog value = var:task_update_tt dec = 10 }
				
				change_variable = { name = task_update_t add = 1 }
			}
		}
		
		task_set_prestige_&tasks_passive& = yes
		
		every_in_list = {
			variable = task_&tasks_passive&
			
			change_variable = { name = task_update_ttt multiply = prev.var:task_&tasks_passive&_prestige }
			change_variable = { name = task_update_ttt divide = 5 }
			change_variable = { name = task_prestige add = var:task_update_ttt }
			
			remove_variable = task_update_t
			remove_variable = task_update_tt
			remove_variable = task_update_ttt
		}
	^
	
	remove_variable = task_update_t
	remove_variable = task_update_tt
	remove_variable = task_update_ttt
}

task_month = {
	every_ruler = {
		limit = {
			is_character = yes
			is_landed = yes
		}
		^^tasks_passive^
			change_variable = { name = task_&tasks_passive&_prog multiply = 0.95 }
			
			every_in_list = {
				variable = array_task_&tasks_passive&_prog
				
				prev = {
					change_variable = { name = task_&tasks_passive&_prog add = { value = prev divide = 10 } }
				}
			}
		^
	}
}

task_ai = {
	^^tasks_passive^
		set_variable = { name = task_&tasks_passive&_lord value = 0 }
		^^skills^ set_variable = { name = task_&tasks_passive&_&skills& value = 0 } ^
		
		task_get_pref_task_&tasks_passive& = { return = task_ai_&tasks_passive& }
		
		if = {
			limit = {
				is_councillor = yes
			}
			set_variable = { name = task_ai_&tasks_passive&_lord value = 0 }
		}
		else = {
			task_get_pref_char_&tasks_passive& = { worker = this return = task_ai_&tasks_passive&_lord }
		}
		
		^^skills^
			set_variable = { name = task_ai_&tasks_passive&_&skills& value = 0 }
			
			ordered_&skills&_councillor = {
				position = 0
				
				prev = {
					task_get_pref_char_&tasks_passive& = { worker = prev return = task_ai_&tasks_passive&_&skills& }
				}
			}
		^
	^
	
	set_variable = { name = task_ai_t value = 0 }
	
	^^tasks_passive^
		set_variable = { name = task_&tasks_passive&_lord value = var:task_ai_&tasks_passive& }
		change_variable = { name = task_&tasks_passive&_lord multiply = var:task_ai_&tasks_passive&_lord }
		change_variable = { name = task_ai_t add = var:task_&tasks_passive&_lord }
	^
	
	if = {
		limit = {
			has_variable = task_ai_t
			
			var:task_ai_t > 0
		}
		^^tasks_passive^
			change_variable = { name = task_&tasks_passive&_lord multiply = 10 }
			change_variable = { name = task_&tasks_passive&_lord divide = var:task_ai_t }
		^
	}
	
	^^skills^
		set_variable = { name = task_ai_t value = 0 }
	
		^^tasks_passive^
			set_variable = { name = task_&tasks_passive&_&skills& value = var:task_ai_&tasks_passive& }
			change_variable = { name = task_&tasks_passive&_&skills& multiply = var:task_ai_&tasks_passive&_&skills& }
			change_variable = { name = task_ai_t add = var:task_&tasks_passive&_&skills& }
		^
		
		if = {
			limit = {
				has_variable = task_ai_t
				
				var:task_ai_t > 0
			}
			^^tasks_passive^
				change_variable = { name = task_&tasks_passive&_&skills& multiply = 10 }
				change_variable = { name = task_&tasks_passive&_&skills& divide = var:task_ai_t }
			^
		}
	^
	
	remove_variable = task_ai_t
	
	^^tasks_passive^
		remove_variable = task_ai_&tasks_passive&
		remove_variable = task_ai_&tasks_passive&_lord
		^^skills^ remove_variable = task_ai_&tasks_passive&_&skills& ^
	^
}

task_rank_up_handler = {
	if = {
		limit = {
			is_character = yes
			is_landed = yes
			
			primary_title.tier > tier_barony
			
			NOT = {
				^^tasks_passive^ has_variable = task_&tasks_passive&_prog ^
			}
		}
		task_ai = yes
		task_update = yes
	}
}
task_rank_down_handler = {
	if = {
		limit = {
			OR = {
				is_landed = no
				is_ruler = no
				
				primary_title.tier = tier_barony
			}
			OR = {
				^^tasks_passive^ has_variable = task_&tasks_passive&_prog ^
			}
		}
		clear_variable_list = task_workers
	
		^^tasks_passive^
			clear_variable_list = task_&tasks_passive& 
			array_clear = { name = task_&tasks_passive&_time }
			array_clear = { name = task_&tasks_passive&_prog }
			
			remove_variable = task_&tasks_passive&_prog
			remove_variable = task_&tasks_passive&_prestige
			remove_variable = task_&tasks_passive&_lord
			^^skills^ remove_variable = task_&tasks_passive&_&skills& ^
		^
	}
}

task_get_pref_task_manage_domain = {
	set_variable = { name = $return$ value = 1 }
}
task_get_pref_task_manage_realm = {
	set_variable = { name = $return$ value = 1 }
}
task_get_pref_task_manage_logistics = {
	set_variable = { name = $return$ value = 1 }
}
task_get_pref_task_manage_stockpile = {
	set_variable = { name = $return$ value = 1 }
}

task_get_pref_char_manage_domain = {
	task_get_prog_manage_domain = { worker = $worker$ time = 1 return = $return$ }
}
task_get_pref_char_manage_realm = {
	task_get_prog_manage_realm = { worker = $worker$ time = 1 return = $return$ }
}
task_get_pref_char_manage_logistics = {
	task_get_prog_manage_logistics = { worker = $worker$ time = 1 return = $return$ }
}
task_get_pref_char_manage_stockpile = {
	task_get_prog_manage_stockpile = { worker = $worker$ time = 1 return = $return$ }
}

task_get_prog = {
	sqrt_effect = {
		inp = var:task_get_prog_t
		return = task_get_prog_tt
	}
	
	change_variable = { name = task_get_prog_t multiply = var:task_get_prog_tt }
	change_variable = { name = task_get_prog_t divide = 30 }
	change_variable = { name = task_get_prog_t add = 0.1 }
	change_variable = { name = task_get_prog_t multiply = $time$ }
	change_variable = { name = task_get_prog_t divide = 12 }
	
	set_variable = { name = $return$ value = var:task_get_prog_t }
	
	remove_variable = task_get_prog_t
	remove_variable = task_get_prog_tt
}
task_get_prog_manage_domain = {
	set_variable = { name = task_get_prog_t value = $worker$.stewardship }
	change_variable = { name = task_get_prog_t add = { value = $worker$.diplomacy divide = 2 } }
	change_variable = { name = task_get_prog_t divide = 1.5 }
	
	task_get_prog = { return = $return$ time = $time$ }
}
task_get_prog_manage_realm = {
	set_variable = { name = task_get_prog_t value = $worker$.diplomacy }
	change_variable = { name = task_get_prog_t add = { value = $worker$.stewardship divide = 2 } }
	change_variable = { name = task_get_prog_t divide = 1.5 }
	
	task_get_prog = { return = $return$ time = $time$ }
}
task_get_prog_manage_logistics = {
	set_variable = { name = task_get_prog_t value = $worker$.martial }
	change_variable = { name = task_get_prog_t add = { value = $worker$.stewardship divide = 2 } }
	change_variable = { name = task_get_prog_t divide = 1.5 }
	
	task_get_prog = { return = $return$ time = $time$ }
}
task_get_prog_manage_stockpile = {
	set_variable = { name = task_get_prog_t value = $worker$.stewardship }
	change_variable = { name = task_get_prog_t add = { value = $worker$.diplomacy divide = 2 } }
	change_variable = { name = task_get_prog_t divide = 1.5 }
	
	task_get_prog = { return = $return$ time = $time$ }
}

task_set_prestige_manage_domain = {
	if = {
		limit = {
			has_variable = task_manage_domain_prog
			
			var:task_manage_domain_prog > domain_size
		}
		set_variable = { name = $return$ value = domain_size }
		change_variable = { name = $return$ divide = var:task_manage_domain_prog }
		
		sqrt_effect = {
			inp = var:$return$
			return = $return$
		}
	}
	else = {
		set_variable = { name = $return$ value = 1 }
	}
}
task_set_prestige_manage_realm = {
	sqrt_effect = {
		inp = sub_realm_size
		return = $return$
	}
	
	change_variable = { name = $return$ add = vassal_count }
	change_variable = { name = $return$ divide = 2 }
	
	if = {
		limit = {
			has_variable = task_manage_realm_prog
			
			var:task_manage_realm_prog = {
				compare_value > prev.var:$return$
			}
		}
		change_variable = { name = $return$ divide = var:task_manage_realm_prog }
		
		sqrt_effect = {
			inp = var:$return$
			return = $return$
		}
	}
	else = {
		set_variable = { name = $return$ value = 1 }
	}
}
task_set_prestige_manage_logistics = {
	if = {
		limit = {
			has_variable = task_manage_logistics_prog
			has_variable = mil_power
			
			var:task_manage_logistics_prog = {
				compare_value > prev.var:mil_power
			}
		}
		set_variable = { name = $return$ value = var:mil_power }
		change_variable = { name = $return$ divide = var:task_manage_logistics_prog }
		
		sqrt_effect = {
			inp = var:$return$
			return = $return$
		}
	}
	else = {
		set_variable = { name = $return$ value = 1 }
	}
}
task_set_prestige_manage_stockpile = {
	set_variable = { name = $return$ value = 0 }
	
	^^goods^
		if = {
			limit = {
				has_variable = trade_want_&goods&
			}
			change_variable = { name = $return$ add = var:trade_want_&goods& }
		}
	^
	
	sqrt_effect = {
		inp = var:$return$
		return = $return$
	}
	
	change_variable = { name = $return$ divide = 2 }
	
	if = {
		limit = {
			has_variable = task_manage_stockpile_prog
			
			var:task_manage_stockpile_prog = {
				compare_value > prev.var:$return$
			}
		}
		change_variable = { name = $return$ divide = var:task_manage_stockpile_prog }
		
		sqrt_effect = {
			inp = var:$return$
			return = $return$
		}
	}
	else = {
		set_variable = { name = $return$ value = 1 }
	}
}